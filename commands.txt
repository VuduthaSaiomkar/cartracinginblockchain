CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts/peerOrganizations/dealer.example.com/users/Admin@dealer.example.com/msp
CORE_PEER_ADDRESS=peer0.dealer.example.com:7051
CORE_PEER_LOCALMSPID="dealerMSP"
CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts/peerOrganizations/dealer.example.com/peers/peer0.dealer.example.com/tls/ca.crt


 peer channel join -b mychannel.block

peer chaincode install -n mycc -v 2.0 -p github.com/car-tracing/


CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts/peerOrganizations/company.example.com/users/Admin@company.example.com/msp
CORE_PEER_ADDRESS=peer0.company.example.com:7051
CORE_PEER_LOCALMSPID="companyMSP"
CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts/peerOrganizations/company.example.com/peers/peer0.company.example.com/tls/ca.crt


CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts/peerOrganizations/rto.example.com/users/Admin@rto.example.com/msp
CORE_PEER_ADDRESS=peer0.rto.example.com:7051
CORE_PEER_LOCALMSPID="rtoMSP"
CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts/peerOrganizations/rto.example.com/peers/peer0.rto.example.com/tls/ca.crt




peer channel create -o orderer.example.com:7050 -c mychannel -f ./crypto/channel.tx --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem
peer chaincode instantiate -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n mycc -v 2.0 -c '{"Args":[""]}' -P "OR('rtoMSP.peer','companyMSP.peer',"dealerMSP.peer")"

peer chaincode upgrade -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n mycc -v 3.0 -c '{"Args":[""]}' -P "OR('rtoMSP.peer','companyMSP.peer',"dealerMSP.peer")"

apt-get update
apt-get install vim


fabric-ca-client enroll --caname ca1.example.com --tls.client.certfile   ca.dealer.example.com-cert.pem --tls.client.keyfile  6dd02847f4b76f5d3a2ac202e618599d0af6d61c1708fc47d2bfdb15949cfbd0_sk -u https://admin:adminpw@localhost:7054




export TRX_ID=$(curl -s -X POST \
  http://localhost:4000/initledger \
   -H "authorization: Bearer $company_TOKEN" \
   -H "content-type: application/json" \
   -d '{
 "peers": ["peer0.company.example.com","peer0.rto.example.com"],
 "fcn":"initledger",
 "args":[""]
 }')



curl -s -X GET  "http://localhost:4000/queryCar?peer=peer0.dealer.example.com&fcn=queryCar&args=%5B%22CAR0%22%5D"   -H "authorization: Bearer $company_TOKEN"   -H "content-type: application/json"



fabric-ca-client enroll --caname ca2.example.com --tls.certfiles ca.crt --tls.client.certfile  ca.dealer.example.com-cert.pem --tls.client.keyfile da6e1ba86237b361a9c6dca175adf34448c37632705d51a2589e22916f124b81_sk -u https://admin:adminpw@localhost:7054
